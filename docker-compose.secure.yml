version: '3.8'
services:
  nginx:
    image: nginx:alpine
    container_name: streamlit-nginx
    ports:
    - 80:80
    - 443:443
    volumes:
    - ./nginx/conf.d:/etc/nginx/conf.d:ro
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    - ./logs/nginx:/var/log/nginx
    - ./ssl:/etc/nginx/ssl:ro
    networks:
    - streamlit-network
    restart: unless-stopped
    security_opt:
    - no-new-privileges:true
    read_only: true
    tmpfs:
    - /tmp
    - /var/cache/nginx
    - /var/run
    depends_on:
    - sample-app
  sample-app:
    image: python:3.11-slim
    working_dir: /app
    networks: &id001
    - streamlit-network
    restart: unless-stopped
    security_opt: &id002
    - no-new-privileges:true
    cap_drop: &id003
    - ALL
    cap_add: &id004
    - SETGID
    - SETUID
    read_only: true
    tmpfs: &id005
    - /tmp:rw,noexec,nosuid,size=100m
    - /app/.streamlit:rw,noexec,nosuid,size=10m
    - /home/nobody:rw,noexec,nosuid,size=10m
    user: nobody:nogroup
    environment: &id006
      PYTHONPATH: /app
      STREAMLIT_SERVER_HEADLESS: 'true'
      STREAMLIT_BROWSER_GATHER_USAGE_STATS: 'false'
    deploy: &id007
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    healthcheck: &id008
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8501/_stcore/health
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    expose: &id009
    - '8501'
    container_name: streamlit-sample-app
    volumes:
    - ./apps/sample-app:/app:ro
    command: sh -c "pip install --no-cache-dir streamlit pandas numpy matplotlib seaborn
      && streamlit run app.py --server.port=8501 --server.address=0.0.0.0 --server.headless=true"
  n2s-tmmi-tracker:
    image: python:3.11-slim
    working_dir: /app
    networks: *id001
    restart: unless-stopped
    security_opt: *id002
    cap_drop: *id003
    cap_add: *id004
    read_only: true
    tmpfs: *id005
    user: nobody:nogroup
    environment: *id006
    deploy: *id007
    healthcheck: *id008
    expose: *id009
    container_name: streamlit-n2s-tmmi-tracker
    volumes:
    - ./apps/n2s-tmmi-tracker:/app:ro
    command: sh -c "pip install --no-cache-dir -r requirements.txt && streamlit run
      app.py --server.port=8501 --server.address=0.0.0.0 --server.headless=true"
  n2s-impact-model:
    image: python:3.11-slim
    working_dir: /app
    networks: *id001
    restart: unless-stopped
    security_opt: *id002
    cap_drop: *id003
    cap_add: *id004
    read_only: true
    tmpfs: *id005
    user: nobody:nogroup
    environment: *id006
    deploy: *id007
    healthcheck: *id008
    expose: *id009
    container_name: streamlit-n2s-impact-model
    volumes:
    - ./apps/n2s-impact-model:/app:ro
    command: sh -c "pip install --no-cache-dir -r requirements.txt && streamlit run
      app.py --server.port=8501 --server.address=0.0.0.0 --server.headless=true"
networks:
  streamlit-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: 'false'
